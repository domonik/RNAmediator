* Preprocess
** Sort
grep miR-17- Predicted_Target_Locations.default_predictions.hg19.bed |cut -f1-3,6 |sort -k1,1 -k2,2n > mir17.bed
grep miR-221- Predicted_Target_Locations.default_predictions.hg19.bed |cut -f1-3,6 |sort -k1,1 -k2,2n > mir221.bed
** liftover ucsc
sort -k1,1 -k2,2n mir221_liftover.bed |perl -wlane 'print join("\t",join("\t",@F[0..2]),"name",255,$F[3])' > mir221.bed
sort -k1,1 -k2,2n mir17_liftover.bed |perl -wlane 'print join("\t",join("\t",@F[0..2]),"name",255,$F[3])' > mir17.bed
** Find closest pairs
closestBed -D a -d -io -s -a mir17.bed -b mir221.bed |grep -v -P "\-1\t\-1" > Closest_17_221.bed
python -c "import sys;[sys.stdout.write('\t'.join(line.split('\t')[:])) for line in sys.stdin if (int(line.split('\t')[-1]) <= 200 and int(line.split('\t')[-1]) >= -200)]" < Closest_17_221.bed > Closest_17_221_200.bed
** Annotate
rsync -auv jack:/scratch2/fall/Data/Annotation/Homo_sapiens.GRCh38.95.gtf.gz .
perl ~/Scripts/Workflowscripts/Universal/AnnotateBed.pl -b Closest_17_221_200.bed -a Homo_sapiens.GRCh38.95.gff3.gz -w ON --specific gene > Annotated_17_221_closest.bed
grep ENSG Annotated_17_221_closest.bed | perl -lane 'print join("\t",$F[0],$F[15],$F[16],$F[14],".",$F[5])' |sort -V |uniq > TargetGenes_17_221.bed
** Create fastas
fastaFromBed -fi hg38.extended.fa -bed TargetGenes_17_221.bed -name+ -s |gzip > 17_221_targets.fa.gz
** Convert to local coords
perl -lane '{if ($F[5] eq "\+" or $F[5] eq "u" or $F[5] eq "." or $F[5] > 0){$start = $F[1]-$F[15];}else{$start = $F[16]-$F[2]} if ($start >= 0 ){ $end = $start+9; print join("\t",$F[0],$start,$end,@F[3..5])}}' Annotated_17_221_closest.bed |sort -k1,1 -k2,2n -u > 17_local_constraints.bed
perl -lane '{if ($F[5] eq "\+" or $F[5] eq "u" or $F[5] eq "." or $F[5] > 0){$start = $F[8]-$F[15];}else{$start = $F[16]-$F[9]} if ($start >= 0 ){ $end = $start+9; print join("\t",$F[0],$start,$end,@F[3..5])}}' Annotated_17_221_closest.bed |sort -k1,1 -k2,2n -u > 221_local_constraints.bed
** Create paired constraint
perl -lane 'if ($F[0]=~ /chr/ && $F[7] =~ /chr/){print join("\t",$F[0],$F[1]-$F[15],$F[2]-$F[15],@F[3..7],$F[8]-$F[15],$F[9]-$F[15],@F[10..$#F])}' Annotated_17_221_closest.bed |perl -lane 'if($F[1]>=0 && $F[2] >= 0 && $F[8] >= 0 && $F[9] >= 0){print $_}' |grep ENSG |sort -k1,1 -k2,2n -u > Local_Paired_17_221_constraints.bed
** Run on miRNA 17/221
*** PLFold
**** Calculate
 ~/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintPLFold.py -s 17_221_targets.fa.gz -w 250 -r raw -n unpaired -p paired -x 17_local_constraints.bed -o Plcons_17 -z 4
 ~/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintPLFold.py -s 17_221_targets.fa.gz -w 250 -r raw -n unpaired -p paired -x 221_local_constraints.bed -o Plcons_221 -z 4 --loglevel WARNING
**** Collect
cd Plcons_17
python ~/Projects/INPROGRESS/RIssmed/RIssmed/CollectConsResults.py -u 1 -z 1 -g ../TargetGenes_17_221.bed -b 0,1 -c 0 -p 250,60 -o Collection
cd Plcons_221
python ~/Projects/INPROGRESS/RIssmed/RIssmed/CollectConsResults.py -u 1 -z 1 -g ../TargetGenes_17_221.bed -b 0,1 -c 0 -p 250,60 -o Collection
*** Fold
**** single (bringt hier nix)
python /home/fall/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintFold.py -s 17_221_targets.fa.gz -w 100 -n unpaired -p paired -r add -x 17_local_constraints.bed -i TargetGenes_17_221.bed -z 4 -o Window_17
python /home/fall/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintFold.py -s 17_221_targets.fa.gz -w 250 -n unpaired -p paired -r add -x 221_local_constraints.bed -i TargetGenes_17_221.bed -z 4 -o Window_221
**** paired
python /home/fall/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintFold.py -s 17_221_targets.fa.gz -w 100 -l 90 -n unpaired -p paired -r add -x Local_Paired_17_221_constraints.bed -i TargetGenes_17_221.bed -z 4 -o Window_paired
**** Collect
cd Window_paired
python ~/Projects/INPROGRESS/RIssmed/RIssmed/CollectWindowResults.py -z 1 -g ../TargetGenes_17_221.bed -b " -1,1" -p 100,90 -o Collection
* Run on FUBP and U2AF65
cd /scr/k70san2/fall/Constraints/Mainz/ReStart_U2AF65_FUBP
ca rissmed
#rsync -auv ../U2AF65_FUBP_NEW65/*.fa*gz .
** Reprocess, for Preprocess of old files see ~/Projects/INPROGRESS/FoldConstraints/Cooperativity_Mainz/workflow.org
*** Sort
sort -k1,1 -k2,2n U2AF65_peaks_reproducible_3CL.bed |uniq > Sorted_65_peaks_hg38.bed
sort -k1,1 -k2,2n FUBP1_peaks_reproducible_3CL.bed |uniq > Sorted_Fu_peaks_hg38.bed
*** Find closest pairs
closestBed -D a -d -io -s -a Sorted_65_peaks_hg38.bed -b Sorted_Fu_peaks_hg38.bed |grep -v -P "\-1\t\-1" > Closest_65_Fu.bed
python -c "import sys;[sys.stdout.write('\t'.join(line.split('\t')[:])) for line in sys.stdin if (int(line.split('\t')[12]) <= 150 and int(line.split('\t')[12]) >= -150)]" < Closest_65_Fu.bed > Closest_65_Fu_150.bed
*** Merge and annotate
rsync -auv jack:/scratch2/fall/Data/Annotation/Homo_sapiens.GRCh38.88.gtf.gz .
perl ~/Work/Projects/Workflows/scripts/AnnotateBed.pl -b Closest_65_Fu_150.bed -a Homo_sapiens.GRCh38.88.gtf.gz -w ON --specific gene |sort -V|uniq|perl -wlane 'print "chr".$_' |gzip > Annotated_65_Fu_closest.bed.gz
grep -w gene <(zcat Annotated_65_Fu_closest.bed.gz) |sort -V |gzip > Annotated_65_Fu_closest_gene_overlap.bed.gz
perl -wlane 'print join("\t",$F[0],$F[15],$F[16],$F[14],".",$F[5])' <(zcat Annotated_65_Fu_closest_gene_overlap.bed.gz)|sort -V |uniq> TargetGenes_65_Fu.bed
perl -wlane 'print join("\t",@F[0..5])' <(zcat Annotated_65_Fu_closest.bed.gz)|sort -V |uniq > 65_peaks_for_folding.bed
perl -wlane 'print join("\t",@F[7..9],$F[3],@F[11..12])' <(zcat Annotated_65_Fu_closest.bed.gz)|sort -V |uniq > Fu_peaks_for_folding.bed
*** Get fasta with strand info!!!
fastaFromBed -fi hg38.extended.fa -bed TargetGenes_65_Fu.bed -name+ -s |gzip > 65_Fu_targets.fa.gz
*** Get local coords of Fu binding on 65 extension, closestBed -D a gives us dist in regard to a, as we consider strand in fasta this is important
perl -lane '{if ($F[5] eq "\+" or $F[5] eq "u" or $F[5] eq "." or $F[5] > 0){$start = $F[1]-$F[15]+1;}else{$start = $F[16]-$F[2]+1} if ($start > 0 ){ $end = $start+9; print join("\t",$F[0],$start,$end,@F[3..5])}}' Annotated_65_Fu_closest_gene_overlap.bed |sort -k1,1 -k2,2n > 65_local_constraints.bed
perl -lane '{if ($F[5] eq "\+" or $F[5] eq "u" or $F[5] eq "." or $F[5] > 0){$start = $F[8]-$F[15]+1;}else{$start = $F[16]-$F[9]+1} if ($start > 0 ){ $end = $start+9; print join("\t",$F[0],$start,$end,@F[3..5])}}' Annotated_65_Fu_closest_gene_overlap.bed |sort -k1,1 -k2,2n > Fu_local_constraints.bed
** Run prob folding
*** on k61
 ca rissmed
 ~/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintPLFold.py -s 65_Fu_targets.fa.gz -w 250 -l 150 -u 5 -g TargetGenes_65_Fu.bed -r raw -n unpaired -p paired -x 65_peaks_for_folding.bed -o 65_local_reproduce -z 30 --loglevel WARNING -m 2
 ~/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintPLFold.py -s 65_Fu_targets.fa.gz -w 250 -l 150 -u 5 -g TargetGenes_65_Fu.bed -r raw -n unpaired -p paired -x Fu_peaks_for_folding.bed -o Fu_local_reproduce -z 30 --loglevel WARNING -m 2
**** Collect
 Need to get rid of direct overlaps and then calculate zscore and stuff!
***** 65
 cd 65_screen
 rsync -auv /scr/jack2/fall/Projects/Cooperativity/U2AF65_FUBP/TargetGenes_65_Fu.bed .
 python ~/Projects/INPROGRESS/RIssmed/RIssmed/CollectConsResults.py -u 5 -z 8 -g ../TargetGenes_65_Fu.bed -b-1,1 -c 0 -p 250,160 -o Collection_65
 cd Collection_65
 zcat Collection_unpaired.bed.gz|perl -wlane 'if ($F[-1]<-2 || $F[-1] > 2){print}'|gzip > Sig65_Collection_unpaired.bed.gz
 zcat Collection_paired.bed.gz|perl -wlane 'if ($F[-1]<-2 || $F[-1] > 2){print}'|gzip > Sig65_Collection_paired.bed.gz
***** Fu
 cd Fu_screen
 rsync -auv /scr/jack2/fall/Projects/Cooperativity/U2AF65_FUBP/TargetGenes_65_Fu.bed .
 python ~/Projects/INPROGRESS/RIssmed/RIssmed/CollectConsResults.py -u 5 -z 8 -g ../TargetGenes_65_Fu.bed -b-1,1 -c 0 -p 250,160 -o Collection_Fu
 zcat Collection_unpaired.bed.gz|perl -wlane 'if ($F[-1]<-2 || $F[-1] > 2){print}'|gzip > SigFu_Collection_unpaired.bed.gz
 zcat Collection_paired.bed.gz|perl -wlane 'if ($F[-1]<-2 || $F[-1] > 2){print}'|gzip > SigFu_Collection_paired.bed.gz
***** Intersect
 intersectBed -s -a Sig65_Collection_unpaired.bed.gz -b Fu_peaks_for_folding.bed -wa -wb |cut -d$'\t' -f 1-15|sort -k1,1 -k2,2n|uniq|cat intersect_header -|cut -d$'\t' -f 1-15|gzip > Intersect_sig65_Fu.bed.gz
 intersectBed -s -a Sig65_Collection_unpaired.bed.gz -b 65_peaks_for_folding.bed -wa -wb |cut -d$'\t' -f 1-15|sort -k1,1 -k2,2n|uniq|cat intersect_header -|cut -d$'\t' -f 1-15|gzip > Intersect_sig65_65.bed.gz
 intersectBed -s -a SigFu_Collection_unpaired.bed.gz -b Fu_peaks_for_folding.bed -wa -wb |cut -d$'\t' -f 1-15|sort -k1,1 -k2,2n|uniq|cat intersect_header -|cut -d$'\t' -f 1-15|gzip > Intersect_sigFu_Fu.bed.gz
 intersectBed -s -a SigFu_Collection_unpaired.bed.gz -b 65_peaks_for_folding.bed -wa -wb |cut -d$'\t' -f 1-15|sort -k1,1 -k2,2n|uniq|cat intersect_header -|cut -d$'\t' -f 1-15|gzip > Intersect_sigFu_65.bed.gz
*** on slurm
ssh k70
cd /scr/k70san2/fall/Constraints/Mainz/Reproduced_U2AF65_FUBP
ca rissmed
sbatch rissmed_65.sh
sbatch rissmed_fu.sh
** Window folding
*** Preprocess
zcat Annotated_65_Fu_closest_gene_overlap.bed.gz |perl -lane 'if($F[1]>=0 && $F[2] >= 0 && $F[8] >= 0 && $F[9] >= 0){print $_}' |grep ENSG |sort -k1,1 -k2,2n -u > Paired_65_Fu_constraints.bed
cut -f 1-6,8-13 Paired_65_Fu_constraints.bed > Minimal_paired_65_Fu_constraints.bed
**** Old
perl -lane 'if ($F[0]=~ /chr/ && $F[7] =~ /chr/){print join("\t",$F[0],$F[1]-$F[15],$F[2]-$F[15],@F[3..7],$F[8]-$F[15],$F[9]-$F[15],@F[10..$#F])}' Annotated_65_Fu_closest_gene_overlap.bed |perl -lane 'if($F[1]>=0 && $F[2] >= 0 && $F[8] >= 0 && $F[9] >= 0){print $_}' |grep ENSG |sort -k1,1 -k2,2n -u > Local_Paired_65_Fu_constraints.bed
cut -f 1-6,8-13 Local_Paired_65_Fu_constraints.bed > Minimal_local_paired_65_Fu_constraints.bed
*** Run
python ~/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintFold.py -s 65_Fu_targets.fa.gz -w 250 -l 150 -n unpaired -p paired -r add -x Minimal_paired_65_Fu_constraints.bed -g TargetGenes_65_Fu.bed -z 8 -o Window_paired_65_FU
**** Old
python ~/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintFold.py -s 65_Fu_targets.fa.gz -w 250 -l 150 -n unpaired -p paired -r add -x Minimal_local_paired_65_Fu_constraints.bed -i TargetGenes_65_Fu.bed -z 25 -o Window_paired_65_FU
*** Collect
cd Window_paired_65_Fu
python ~/Projects/INPROGRESS/RIssmed/RIssmed/CollectWindowResults.py -z 4 -g ../TargetGenes_65_Fu.bed -b-1,1 -p 120,80 -o Collection_Window_paired
* MiRNA coop
conda activate base
cd /scr/k61san/fall/RIssmed/miRNAs
** data
http://www.targetscan.org/cgi-bin/targetscan/data_download.vert72.cgi
http://mirwalk.umm.uni-heidelberg.de/resources/

wget http://mirwalk.umm.uni-heidelberg.de/download/hsa_miRWalk_3UTR.zip .
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/archive/old_refseq/H_sapiens/ARCHIVE/ANNOTATION_RELEASE.109/RNA/rna.fa.gz .
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/archive/old_refseq/H_sapiens/ARCHIVE/ANNOTATION_RELEASE.109/GFF/ref_GRCh38.p12_top_level.gff3.gz
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/vertebrate_mammalian/Homo_sapiens/latest_assembly_versions/GCF_000001405.39_GRCh38.p13/GCF_000001405.39_GRCh38.p13_genomic.fna.gz
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/vertebrate_mammalian/Homo_sapiens/all_assembly_versions/GCF_000001405.38_GRCh38.p12/GCF_000001405.38_GRCh38.p12_genomic.fna.gz
wget http://www.targetscan.org/vert_72/vert_72_data_download/Predicted_Target_Locations.default_predictions.hg19.bed.zip
wget http://hgdownload.soe.ucsc.edu/goldenPath/hg19/liftOver/hg19ToHg38.over.chain.gz
wget ftp://ftp.ensembl.org/pub/release-100/gff3/homo_sapiens/Homo_sapiens.GRCh38.100.chr.gff3.gz
wget ftp://ftp.ensembl.org/pub/grch37/current/gtf/homo_sapiens/Homo_sapiens.GRCh37.87.gtf.gz
wget http://www.targetscan.org/vert_72/vert_72_data_download/TSHuman_7_hg19_3UTRs.gff.zip
** preprocess
*** mirwalk
 unzip hsa_miRWalk_3UTR.zip
 #get genes and chromosomes
 tail -n+2 hsa_miRWalk_3UTR.txt| cut -f3|sort -u > mirWalk_targets
 zcat ref_GRCh38.p12_top_level.gff3.gz|grep $'\tgene\t' |gzip > genes.gff3.gz
 rm -f targetmatches;for i in `cat mirWalk_targets`;do a=$(fgrep "Name=$i;" <(zcat genes.gff3.gz));echo "$i\t$a" >> targetmatches;done
 perl -wlane 'next unless ($F[1]);next if ($F[0]=~/NT_|Best|NC_/ || $F[1] =~ /Best/);print join("\t","chr".$F[1],($F[4]-1),$F[5],$F[0],0,$F[7])' targetmatches |sort -k1,1 -k2,2n|gzip > targetgenes.bed.gz

 ca bedtools
 zcat GCF_000001405.38_GRCh38.p12_genomic.fna.gz |perl -wlane 'if ($_ =~ /^>/){@l=split(" ",$_);($h=$l[0])=~s/\>/\>chr/;print $h}else{print}'> hg38_refseq109.fa
 fastaFromBed -fi hg38_refseq109.fa -bed <(zcat targetgenes.bed.gz) -s -name+ -fullHeader |gzip > targetgenes.fa.gz

 perlswitch perl-5.22.2
 perl ~/Scripts/Perlen/JoinFiles.pl -f hsa_miRWalk_3UTR.txt,targetgenes.bed.gz -d $'\t' -j 3,4 |gzip > targetinfo.gz
 zcat targetinfo.gz|grep -v 'NA'|perl -wlane '@c=split(",",$F[3]); print join("\t",$F[5],($c[0]-1),$c[1],$F[0],$F[4],$F[-1],$F[2])' | sort -k1,1 -k2,2n -u|gzip> targetsites.bed.gz
*** targetscan
 cut -f1-6 Predicted_Target_Locations.default_predictions.hg19.bed |sort -k1,1 -k2,2n -u |perl -wlane 'if ($F[4] < 0){$F[4] = 0} print join("\t",@F[0..5])'> Targetscan_hg19_mir_genomic.bed

 #ca ucsc
 #liftOver Targetscan_hg19_mir_genomic.bed.gz hg19ToHg38.over.chain.gz Targetscan_hg38_mir_genomic.bed Unmapped_liftover19_38 ###COMPLETELY FUCKS UP GENE ANNOTATION

 perl -wlane '@n=split(":",$F[3]);($chr=$F[0])=~s/chr//;print join("\t",$chr,$F[1],$F[2],$n[0],$F[4],$F[5],$n[1])' Targetscan_hg19_mir_genomic.bed|sort -k1,1 -k2,2n|gzip > targetsites_targetscan_hg19.bed.gz
 intersectBed -s -a targetsites_targetscan_hg19.bed.gz -b Homo_sapiens.GRCh37.87.gtf.gz -wa -wb |gzip > Anno_targetsites_targetscan_hg19.bed.gz
 #subset for min/max distance 10/250
 closestBed -s -a Anno_targetsites_targetscan_hg19.bed.gz -b targetsites_targetscan_hg19.bed.gz -D a -io |gzip > Closest_Anno_targetsites_targetscan_hg19.bed.gz
 zcat Closest_Anno_targetsites_targetscan_hg19.bed.gz|perl -wlane 'if (-250<=$F[-1]&&$F[-1]<=250){print}' |gzip > Testset_Anno_targetsites_targetscan_hg19.bed.gz
 zcat Testset_Anno_targetsites_targetscan_hg19.bed.gz|perl -wlne '@F=split("\t",$_); print "chr".join("\t",@F[0..6])."\nchr".join("\t",@F[16..22])'|sort -u |sort -k1,1 -k2,2n| gzip > ToFold_targetsites_targetscan_hg19.bed.gz

 zcat ToFold_targetsites_targetscan_hg19.bed.gz|cut -f4 |cut -d$':' -f1|sort -u > Targetscan_targetgenes
 fgrep $'gene\t' gencode.v19.annotation.sorted.gtf > gencode.v19.genes.sorted.gtf
 rm -f targetmatches_tscan;for i in `cat Targetscan_targetgenes`;do a=$(fgrep "gene_name \"$i\";" <(cat gencode.v19.genes.sorted.gtf));echo "$i\t$a" >> targetmatches_tscan;done
 perl -wlane 'next unless ($F[1]);next if ($F[0]=~/NT_|Best|NC_/ || $F[1] =~ /Best/);print join("\t",$F[1],($F[4]-1),$F[5],$F[0],0,$F[7])' targetmatches_tscan |sort -k1,1 -k2,2n|grep -v Gnomon|gzip > targetgenes_tscan.bed.gz

 ca bedtools
 #zcat GCF_000001405.38_GRCh38.p12_genomic.fna.gz |perl -wlane 'if ($_ =~ /^>/){@l=split(" ",$_);($h=$l[0])=~s/\>/\>chr/;print $h}else{print}'> hg38_refseq109.fa
 fastaFromBed -fi hg19.fa -bed <(zcat targetgenes_tscan.bed.gz|grep -v Gnomon) -s -name+ -fullHeader |gzip > tscan_targetgenes.fa.gz

 ~/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintPLFold.py -s tscan_targetgenes.fa.gz -g targetgenes_tscan.bed.gz -w 250 -l 150 -u 7 -r raw -n unpaired -p paired -x ToFold_targetsites_targetscan_hg19.bed.gz -o targetscan_coop -z 20 -m 2

** run on slurm
ca rissmed
sbatch --export ALL rissmed_mirna.sh
sbatch --export ALL rissmed_collect.sh
*** rissmed_mirna.sh
 #!/bin/zsh
 #SBATCH --job-name=RIssMed
 #SBATCH --nodes=1
 #SBATCH --nodelist=k72
 #SBATCH --ntasks=1
 #SBATCH --cpus-per-task=30
 #SBATCH --time=96:00:00
 #SBATCH --mem=50G
 #SBATCH --mail-user=fall@bioinf.uni-leipzig.de
 #SBATCH --mail-type=FAIL,BEGIN,END
 #SBATCH --output=/scr/k70san2/fall/SLURM/RIssMed.%J.log
 ##SBATCH --error=/scr/k70san2/fall/SLURM/RIssMed.%J.err

 echo "JOB = $SLURM_JOB_NAME"
 echo "Date              = $(date)"
 echo "Hostname          = $(hostname -s)"
 echo "Working Directory = $(pwd)"
 echo ""
 echo "Number of Nodes Allocated      = $SLURM_JOB_NUM_NODES"
 echo "Number of Tasks Allocated      = $SLURM_NTASKS"
 echo "Number of Cores/Task Allocated = $SLURM_CPUS_PER_TASK"

 ca rissmed
 ~/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintPLFold.py -s targetgenes.fa.gz -w 250 -l 150 -u 7 -r raw -n unpaired -p paired -x targetsites.bed.gz -o mirwalk_coop -z 30 --loglevel DEBUG -m 2
*** rissmed_collect.sh
#!/bin/zsh
#SBATCH --job-name=RIssMed
#SBATCH --nodes=1
#SBATCH --nodelist=k72
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=15
#SBATCH --time=96:00:00
#SBATCH --mem=50G
#SBATCH --mail-user=fall@bioinf.uni-leipzig.de
#SBATCH --mail-type=FAIL,BEGIN,END
#SBATCH --output=/scr/k70san2/fall/SLURM/RIssMed.%J.log
##SBATCH --error=/scr/k70san2/fall/SLURM/RIssMed.%J.err

echo "JOB = $SLURM_JOB_NAME"
echo "Date              = $(date)"
echo "Hostname          = $(hostname -s)"
echo "Working Directory = $(pwd)"
echo ""
echo "Number of Nodes Allocated      = $SLURM_JOB_NUM_NODES"
echo "Number of Tasks Allocated      = $SLURM_NTASKS"
echo "Number of Cores/Task Allocated = $SLURM_CPUS_PER_TASK"

ca rissmed
cd /scr/k70san2/fall/Constraints/miRNAs/mirwalk_coop
~/Projects/INPROGRESS/RIssmed/RIssmed/CollectConsResults.py -u 7 -z 15 -g ../targetgenes.bed.gz -b-1,1 -c 0 -p 250,150 -o Collection_mirnas
** Analysis
cd /scr/k70san2/fall/Constraints/miRNAs/mirwalk_coop/Collection_mirnas
zcat Collection_unpaired.bed.gz|sed 's/-/_/'|sed 's/chr//'|sed 's/inf/5000/'|gzip > AllmiR_Collection_unpaired.bed.gz
zcat Collection_unpaired.bed.gz|perl -wlane 'if ($F[-1]<-2 || $F[-1] > 2){print}'|sed 's/-/_/'|sed 's/chr//'|gzip > SigmiR_Collection_unpaired.bed.gz
cd /scr/k70san2/fall/Constraints/miRNAs/
ln -s ~/Projects/INPROGRESS/RIssmed/intersect_header .
ln -s mirwalk_coop/Collection_mirnas/SigmiR_Collection_unpaired.bed.gz .
ln -s mirwalk_coop/Collection_mirnas/AllmiR_Collection_unpaired.bed.gz .
intersectBed -s -a SigmiR_Collection_unpaired.bed.gz -b targetsites.bed.gz -wa -wb |cut -d$'\t' -f 1-15|sort -k1,1 -k2,2n|uniq|cat intersect_header -|cut -d$'\t' -f 1-15|gzip > Intersect_sigmiRs.bed.gz
intersectBed -s -a AllmiR_Collection_unpaired.bed.gz -b targetsites.bed.gz -wa -wb |cut -d$'\t' -f 1-15|sort -k1,1 -k2,2n|uniq|cat intersect_header -|cut -d$'\t' -f 1-15|gzip > Intersect_allmiRs.bed.gz


intersectBed -s -a bla.gz -b targetsites.bed.gz -wa -wb |cut -d$'\t' -f 1-15|sort -k1,1 -k2,2n|uniq|cat intersect_header -|cut -d$'\t' -f 1-15|gzip > Intersect_allmiRs.bed.gz
* GOALS
** Collect information on influence of constraints on pairing probabilities
*** Create Random Sequences
cd /scr/k70san2/fall/Constraints/Random
ca rissmed

for i in 20 40 60 80;do python ~/Projects/INPROGRESS/RIssmed/RIssmed/Randseq.py -l 1000 -g $i -n 1000 -o GC$i;done

for a in 20 40 60 80;do for i in 5 7 9 11;do ~/Projects/INPROGRESS/RIssmed/RIssmed/ConstraintPLFold.py -s GC$a\.fa.gz -w 250 -l 150 -u $i -r raw -n unpaired -p paired -x sliding -o Random_$a\_$i -z 12 --loglevel DEBUG -m 2;done
#SLURM
~/Projects/INPROGRESS/RIssmed/slurm/rissmed_random.sh
for a in 20 40 60 80;do for i in 5 7 9 11;do sbatch --export ALL,gc=$a,u=$i rissmed_random.sh;done;done
